{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { Form, FormLayout, TextField, Toast, ButtonGroup, Button, Checkbox, RadioButton, Card } from '@shopify/polaris';\nimport axios from 'axios';\nimport '../css/AppStyle.css';\n\nconst config = require('../../server/config/httpConfig.js');\n\nfunction ThemeSetting(props) {\n  const isInitialMount = useRef(true);\n  const {\n    0: themeColor,\n    1: setThemeColor\n  } = useState();\n  const {\n    0: fontColor,\n    1: setFontColor\n  } = useState();\n  const {\n    0: efontColor,\n    1: setEfontColor\n  } = useState();\n  const {\n    0: buttonColor,\n    1: setButtonColor\n  } = useState();\n  const {\n    0: headerColor,\n    1: setHeaderColor\n  } = useState();\n  const {\n    0: second,\n    1: setSecond\n  } = useState();\n  const {\n    0: minute,\n    1: setMinute\n  } = useState();\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const {\n    0: variantType,\n    1: setVariantType\n  } = useState('radio');\n  const {\n    0: checkedRadio,\n    1: setCheckedRadio\n  } = useState('disabled');\n  const {\n    0: theme_title,\n    1: setThemeTitle\n  } = useState('');\n  const {\n    0: firstBtn,\n    1: setFirstBtn\n  } = useState();\n  const {\n    0: secondBtn,\n    1: setSecondBtn\n  } = useState();\n  const {\n    0: message,\n    1: setMessage\n  } = useState();\n  const {\n    0: showToast,\n    1: setToast\n  } = useState(false);\n\n  const toggleToast = () => setToast(!showToast);\n\n  const toastMarkup = showToast ? __jsx(Toast, {\n    content: message,\n    onDismiss: toggleToast,\n    Diduration: 2500\n  }) : null;\n  useEffect(() => {\n    async function getData() {\n      const search_data = {\n        search: props.valueID\n      };\n      await axios.post(config.HTTP_API + '/store/search/theme', search_data).then(res => {\n        setThemeColor(res.data[0].theme_color);\n        setFontColor(res.data[0].theme_font_color);\n        setEfontColor(res.data[0].theme_efont_color);\n        setButtonColor(res.data[0].theme_button_color);\n        setHeaderColor(res.data[0].theme_header_color);\n        res.data[0].variant_type == 'dropdown' ? setCheckedRadio('optional') : setCheckedRadio('disabled');\n\n        if (res.data[0].theme_title) {\n          setThemeTitle(res.data[0].theme_title);\n        } else {\n          setThemeTitle('20% OFF Your Next Order!');\n        }\n\n        setFirstBtn(res.data[0].first_btn_text);\n        setSecondBtn(res.data[0].second_btn_text);\n        setMinute(res.data[0].minute);\n        setSecond(res.data[0].second);\n        setChecked(res.data[0].timer);\n      });\n    }\n\n    async function fetchData() {\n      if (isInitialMount.current && props) {\n        isInitialMount.current = false;\n        await getData();\n      }\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", null, toastMarkup, __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '50%'\n    }\n  }, __jsx(Card, {\n    title: \"Upsell theme design\",\n    sectioned: true\n  }, __jsx(Form, null, __jsx(FormLayout, null, __jsx(TextField, {\n    value: theme_title,\n    onChange: value => setThemeTitle(value),\n    label: \"Custom Title\",\n    type: \"text\"\n  }), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"theme_color\",\n    placeholder: \"color\",\n    value: themeColor,\n    onChange: value => setThemeColor(value),\n    label: \"Theme color\"\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"header_color\",\n    placeholder: \"color\",\n    value: headerColor,\n    onChange: value => setHeaderColor(value),\n    label: \"Header color\"\n  }))), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"font_color\",\n    placeholder: \"color\",\n    value: fontColor,\n    onChange: value => setFontColor(value),\n    label: \"Font color\"\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"highlight_color\",\n    placeholder: \"color\",\n    value: efontColor,\n    onChange: value => setEfontColor(value),\n    label: \"Highlighted color\"\n  }))), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"button_color\",\n    placeholder: \"color\",\n    value: buttonColor,\n    onChange: value => setButtonColor(value),\n    label: \"Button color\"\n  }))), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"first_btn_text\",\n    placeholder: firstBtn,\n    value: firstBtn,\n    onChange: value => setFirstBtn(value),\n    label: \"First Button\"\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"second_btn_text\",\n    placeholder: secondBtn,\n    value: secondBtn,\n    onChange: value => setSecondBtn(value),\n    label: \"Second Button\"\n  }))), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(RadioButton, {\n    label: \"Radio\",\n    checked: checkedRadio === 'disabled',\n    id: \"disabled\",\n    name: \"accounts\",\n    onChange: value => {\n      setCheckedRadio('disabled');\n    }\n  }), __jsx(RadioButton, {\n    label: \"Drop Down\",\n    id: \"optional\",\n    name: \"accounts\",\n    checked: checkedRadio === 'optional',\n    onChange: value => {\n      setCheckedRadio('optional');\n    }\n  })), __jsx(Checkbox, {\n    id: \"check_box\",\n    label: \"Enable timer\",\n    checked: checked,\n    onChange: value => setChecked(value)\n  }), __jsx(\"div\", {\n    className: \"flex-container\"\n  }, __jsx(\"div\", null, __jsx(TextField, {\n    id: \"minute\",\n    disabled: !checked,\n    placeholder: \"3\",\n    value: minute,\n    onChange: value => setMinute(value),\n    label: \"Minute\",\n    type: \"number\"\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    id: \"second\",\n    disabled: !checked,\n    placeholder: \"30\",\n    value: second,\n    onChange: value => setSecond(value),\n    label: \"Second\",\n    type: \"number\"\n  }))), __jsx(ButtonGroup, null, __jsx(Button, {\n    onClick: () => {\n      setThemeColor('#f47777');\n      setHeaderColor('white');\n      setFontColor('black');\n      setEfontColor('#f74444');\n      setButtonColor('#f74444');\n      setChecked(true);\n      setMinute(3);\n      setSecond(30);\n      setCheckedRadio('disabled');\n      setThemeTitle('');\n      setFirstBtn('No Thanks :(');\n      setSecondBtn('Add To Cart');\n    }\n  }, \"Reset to default\"), __jsx(Button, {\n    primary: true,\n    onClick: async () => {\n      checkedRadio == 'disabled' ? setVariantType('radio') : setVariantType('dropdown');\n      const db_data = {\n        theme_color: themeColor,\n        theme_font_color: fontColor,\n        theme_efont_color: efontColor,\n        theme_header_color: headerColor,\n        theme_button_color: buttonColor,\n        first_btn_text: firstBtn,\n        second_btn_text: secondBtn,\n        timer: checked,\n        minute: minute,\n        second: second,\n        variant_type: variantType,\n        theme_title: theme_title\n      };\n      await axios.put(config.HTTP_API + '/store/' + props.valueID, db_data).then(() => {\n        setMessage('Theme applied successfully');\n        toggleToast();\n      });\n    }\n  }, \"Apply theme\")))))), __jsx(\"div\", {\n    className: \"modelContent\",\n    style: {\n      width: '50%'\n    }\n  }, __jsx(\"div\", {\n    className: \"upsellHeader\",\n    style: {\n      'backgroundColor': themeColor\n    }\n  }, checked == 1 ? __jsx(\"p\", {\n    className: \"timer\",\n    style: {\n      'color': headerColor\n    }\n  }, minute, \":\", second) : null, theme_title ? __jsx(\"h1\", {\n    style: {\n      'color': headerColor\n    }\n  }, theme_title) : __jsx(\"h1\", {\n    style: {\n      'color': headerColor\n    }\n  }, __jsx(\"span\", {\n    className: \"discount\"\n  }, \"20% OFF\"), \" Your Next Order!\")), __jsx(\"img\", {\n    className: \"upsell-img\",\n    src: \"https://cdn.shopify.com/s/files/1/0273/3332/8930/files/default.png?v=1578600042\"\n  }), __jsx(\"div\", {\n    className: \"upsellInner\"\n  }, __jsx(\"p\", {\n    className: \"upsell-title\",\n    style: {\n      'color': fontColor\n    }\n  }, \"Comfy T-Shirt\"), __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(\"p\", {\n    className: \"upsell-price\",\n    style: {\n      'color': efontColor\n    }\n  }, \"25.99\"), __jsx(\"p\", {\n    className: \"compare\",\n    style: {\n      'color': fontColor\n    }\n  }, \"59.99\")), checkedRadio == 'disabled' ? __jsx(\"div\", {\n    className: \"variants-dic\"\n  }, __jsx(\"li\", {\n    className: \"variants-list\"\n  }, __jsx(\"button\", {\n    className: \"variants-btn selected\",\n    style: {\n      'color': efontColor,\n      'borderColor': efontColor\n    }\n  }, \"Pink\")), __jsx(\"li\", {\n    className: \"variants-list\"\n  }, __jsx(\"button\", {\n    className: \"variants-btn\",\n    style: {\n      'color': fontColor\n    }\n  }, \"Blue\")), __jsx(\"li\", {\n    className: \"variants-list\"\n  }, __jsx(\"button\", {\n    className: \"variants-btn\",\n    style: {\n      'color': fontColor\n    }\n  }, \"Yellow\"))) : __jsx(\"div\", {\n    className: \"variants-dic\"\n  }, __jsx(\"select\", {\n    className: \"variants-list-drop\",\n    style: {\n      'color': efontColor\n    }\n  }, __jsx(\"option\", null, \"Pink\"), __jsx(\"option\", null, \"Blue\"), __jsx(\"option\", null, \"Yellow\"))), __jsx(\"div\", {\n    className: \"buttonFlex\"\n  }, __jsx(\"button\", {\n    className: \"change-next\",\n    style: {\n      'color': fontColor\n    }\n  }, firstBtn), __jsx(\"button\", {\n    className: \"add-to-cart\",\n    style: {\n      'backgroundColor': buttonColor\n    }\n  }, secondBtn))))));\n}\n\nexport default ThemeSetting;","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/ThemeSetting.js"],"names":["React","useState","useRef","useCallback","useEffect","Form","FormLayout","TextField","Toast","ButtonGroup","Button","Checkbox","RadioButton","Card","axios","config","require","ThemeSetting","props","isInitialMount","themeColor","setThemeColor","fontColor","setFontColor","efontColor","setEfontColor","buttonColor","setButtonColor","headerColor","setHeaderColor","second","setSecond","minute","setMinute","checked","setChecked","variantType","setVariantType","checkedRadio","setCheckedRadio","theme_title","setThemeTitle","firstBtn","setFirstBtn","secondBtn","setSecondBtn","message","setMessage","showToast","setToast","toggleToast","toastMarkup","getData","search_data","search","valueID","post","HTTP_API","then","res","data","theme_color","theme_font_color","theme_efont_color","theme_button_color","theme_header_color","variant_type","first_btn_text","second_btn_text","timer","fetchData","current","display","width","value","db_data","put"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  FormLayout,\r\n  TextField,\r\n  Toast,\r\n  ButtonGroup,\r\n  Button,\r\n  Checkbox,\r\n  RadioButton,\r\n  Card\r\n} from '@shopify/polaris';\r\nimport axios from 'axios';\r\nimport '../css/AppStyle.css';\r\n\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction ThemeSetting(props) {\r\n  const isInitialMount = useRef(true);\r\n  const [themeColor, setThemeColor] = useState();\r\n  const [fontColor, setFontColor] = useState();\r\n  const [efontColor, setEfontColor] = useState();\r\n  const [buttonColor, setButtonColor] = useState();\r\n  const [headerColor, setHeaderColor] = useState();\r\n  const [second, setSecond] = useState();\r\n  const [minute, setMinute] = useState();\r\n  const [checked, setChecked] = useState(false);\r\n  const [variantType, setVariantType] = useState('radio');\r\n  const [checkedRadio, setCheckedRadio] = useState('disabled');\r\n  const [theme_title, setThemeTitle] = useState('');\r\n  const [firstBtn, setFirstBtn] = useState();\r\n  const [secondBtn, setSecondBtn] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [showToast, setToast] = useState(false);\r\n  const toggleToast = () => setToast(!showToast);\r\n  const toastMarkup = showToast ? (\r\n    <Toast content={message} onDismiss={toggleToast} Diduration={2500} />\r\n  ) : null;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const search_data = { search: props.valueID };\r\n      await axios.post(config.HTTP_API + '/store/search/theme', search_data).then((res) => {\r\n        setThemeColor(res.data[0].theme_color);\r\n        setFontColor(res.data[0].theme_font_color);\r\n        setEfontColor(res.data[0].theme_efont_color);\r\n        setButtonColor(res.data[0].theme_button_color);\r\n        setHeaderColor(res.data[0].theme_header_color);\r\n        res.data[0].variant_type == 'dropdown' ? setCheckedRadio('optional') : setCheckedRadio('disabled');\r\n        if (res.data[0].theme_title) {\r\n          setThemeTitle(res.data[0].theme_title);\r\n        } else {\r\n          setThemeTitle('20% OFF Your Next Order!');\r\n        }\r\n        setFirstBtn(res.data[0].first_btn_text);\r\n        setSecondBtn(res.data[0].second_btn_text);\r\n        setMinute(res.data[0].minute);\r\n        setSecond(res.data[0].second);\r\n        setChecked(res.data[0].timer);\r\n      });\r\n    }\r\n    async function fetchData() {\r\n      if (isInitialMount.current && props) {\r\n        isInitialMount.current = false;\r\n        await getData();\r\n      }\r\n    }\r\n    fetchData();\r\n\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {toastMarkup}\r\n      <div style={{ display: 'flex' }}>\r\n        <div style={{ width: '50%' }}>\r\n          <Card title=\"Upsell theme design\" sectioned>\r\n            <Form>\r\n              <FormLayout>\r\n                <TextField\r\n                  value={theme_title}\r\n                  onChange={value => setThemeTitle(value)}\r\n                  label=\"Custom Title\"\r\n                  type=\"text\"\r\n                />\r\n                <div className=\"flex-container\">\r\n                  <div>\r\n                    <TextField\r\n                      id=\"theme_color\"\r\n                      placeholder=\"color\"\r\n                      value={themeColor}\r\n                      onChange={value => setThemeColor(value)}\r\n                      label=\"Theme color\" />\r\n                  </div>\r\n                  <div>\r\n                    <TextField\r\n                      id=\"header_color\"\r\n                      placeholder=\"color\"\r\n                      value={headerColor}\r\n                      onChange={value => setHeaderColor(value)}\r\n                      label=\"Header color\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                  <div>\r\n                    <TextField\r\n                      id=\"font_color\"\r\n                      placeholder=\"color\"\r\n                      value={fontColor}\r\n                      onChange={value => setFontColor(value)}\r\n                      label=\"Font color\" />\r\n                  </div>\r\n                  <div>\r\n                    <TextField\r\n                      id=\"highlight_color\"\r\n                      placeholder=\"color\"\r\n                      value={efontColor}\r\n                      onChange={value => setEfontColor(value)}\r\n                      label=\"Highlighted color\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                  <div>\r\n                    <TextField\r\n                      id=\"button_color\"\r\n                      placeholder=\"color\"\r\n                      value={buttonColor}\r\n                      onChange={value => setButtonColor(value)}\r\n                      label=\"Button color\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex-container\">\r\n                  <div>\r\n                    <TextField\r\n                      id=\"first_btn_text\"\r\n                      placeholder={firstBtn}\r\n                      value={firstBtn}\r\n                      onChange={value => setFirstBtn(value)}\r\n                      label=\"First Button\" />\r\n                  </div>\r\n                  <div>\r\n                    <TextField\r\n                      id=\"second_btn_text\"\r\n                      placeholder={secondBtn}\r\n                      value={secondBtn}\r\n                      onChange={value => setSecondBtn(value)}\r\n                      label=\"Second Button\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex-container\">\r\n                  <RadioButton\r\n                    label=\"Radio\"\r\n                    checked={checkedRadio === 'disabled'}\r\n                    id=\"disabled\"\r\n                    name=\"accounts\"\r\n                    onChange={(value) => {setCheckedRadio('disabled')}}\r\n                  />\r\n                  <RadioButton\r\n                    label=\"Drop Down\"\r\n                    id=\"optional\"\r\n                    name=\"accounts\"\r\n                    checked={checkedRadio === 'optional'}\r\n                    onChange={(value) => {setCheckedRadio('optional')}}\r\n                  />\r\n                </div>\r\n                <Checkbox\r\n                  id=\"check_box\"\r\n                  label=\"Enable timer\"\r\n                  checked={checked}\r\n                  onChange={(value) => setChecked(value)}\r\n                />\r\n                <div className=\"flex-container\">\r\n                  <div>\r\n                    <TextField\r\n                      id=\"minute\"\r\n                      disabled={!checked}\r\n                      placeholder=\"3\"\r\n                      value={minute}\r\n                      onChange={value => setMinute(value)}\r\n                      label=\"Minute\"\r\n                      type=\"number\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <TextField\r\n                      id=\"second\"\r\n                      disabled={!checked}\r\n                      placeholder=\"30\"\r\n                      value={second}\r\n                      onChange={value => setSecond(value)}\r\n                      label=\"Second\"\r\n                      type=\"number\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setThemeColor('#f47777');\r\n                      setHeaderColor('white');\r\n                      setFontColor('black');\r\n                      setEfontColor('#f74444');\r\n                      setButtonColor('#f74444');\r\n                      setChecked(true);\r\n                      setMinute(3);\r\n                      setSecond(30);\r\n                      setCheckedRadio('disabled');\r\n                      setThemeTitle('');\r\n                      setFirstBtn('No Thanks :(');\r\n                      setSecondBtn('Add To Cart');\r\n                    }}>Reset to default</Button>\r\n                  <Button\r\n                    primary\r\n                    onClick={async () => {\r\n                      checkedRadio == 'disabled' ? setVariantType('radio') : setVariantType('dropdown');\r\n                      const db_data = {\r\n                        theme_color: themeColor,\r\n                        theme_font_color: fontColor,\r\n                        theme_efont_color: efontColor,\r\n                        theme_header_color: headerColor,\r\n                        theme_button_color: buttonColor,\r\n                        first_btn_text: firstBtn,\r\n                        second_btn_text: secondBtn,\r\n                        timer: checked,\r\n                        minute: minute,\r\n                        second: second,\r\n                        variant_type: variantType,\r\n                        theme_title: theme_title\r\n                      };\r\n                      await axios.put(config.HTTP_API + '/store/' + props.valueID, db_data).then(() => {\r\n                        setMessage('Theme applied successfully');\r\n                        toggleToast();\r\n                      })\r\n                    }}>Apply theme</Button>\r\n                </ButtonGroup>\r\n              </FormLayout>\r\n            </Form>\r\n          </Card>\r\n        </div>\r\n        <div className=\"modelContent\" style={{ width: '50%' }}>\r\n          <div className=\"upsellHeader\" style={{ 'backgroundColor': themeColor }}>\r\n            {checked == 1 ? (\r\n              <p className=\"timer\" style={{ 'color': headerColor }}>{minute}:{second}</p>\r\n            ) : (\r\n              null\r\n            )}\r\n            {theme_title ?\r\n              <h1 style={{ 'color': headerColor }}>{theme_title}</h1>\r\n              :\r\n              <h1 style={{ 'color': headerColor }}><span className=\"discount\">20% OFF</span> Your Next Order!</h1>\r\n            }\r\n          </div>\r\n          <img className=\"upsell-img\" src=\"https://cdn.shopify.com/s/files/1/0273/3332/8930/files/default.png?v=1578600042\" />\r\n          <div className=\"upsellInner\">\r\n            <p className=\"upsell-title\" style={{ 'color': fontColor }}>Comfy T-Shirt</p>\r\n            <div className=\"flex\">\r\n              <p className=\"upsell-price\" style={{ 'color': efontColor }}>25.99</p>\r\n              <p className=\"compare\" style={{ 'color': fontColor }}>59.99</p>\r\n            </div>\r\n            {checkedRadio == 'disabled' ? (\r\n              <div className=\"variants-dic\">\r\n                <li className=\"variants-list\"><button className=\"variants-btn selected\" style={{ 'color': efontColor, 'borderColor': efontColor }}>Pink</button></li>\r\n                <li className=\"variants-list\"><button className=\"variants-btn\" style={{ 'color': fontColor }}>Blue</button></li>\r\n                <li className=\"variants-list\"><button className=\"variants-btn\" style={{ 'color': fontColor }}>Yellow</button></li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"variants-dic\">\r\n                <select className=\"variants-list-drop\" style={{ 'color': efontColor }}>\r\n                  <option>Pink</option><option>Blue</option><option>Yellow</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n            <div className=\"buttonFlex\">\r\n              <button className=\"change-next\" style={{ 'color': fontColor }}>{firstBtn}</button>\r\n              <button className=\"add-to-cart\" style={{ 'backgroundColor': buttonColor }}>{secondBtn}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeSetting;\r\n"]},"metadata":{},"sourceType":"module"}