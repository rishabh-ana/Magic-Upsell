{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Card, Stack, Badge } from '@shopify/polaris';\nimport { useQuery } from 'react-apollo';\nimport { GET_PRODUCTS_BY_ID } from '../../server/config/appBasicQuery.js';\nimport '../css/AppStyle.css';\nimport axios from 'axios';\nimport { Refresh } from './ProductPicker.js';\n\nconst config = require('../../server/config/httpConfig.js');\n\nfunction ProductList({\n  valueID\n}) {\n  const isInitialMount = useRef(true);\n  const {\n    0: productArray,\n    1: setProductArray\n  } = useState();\n  let {\n    refresh,\n    setRefresh\n  } = useContext(Refresh);\n  const {\n    0: p1,\n    1: setP1\n  } = useState();\n  const {\n    0: p2,\n    1: setP2\n  } = useState();\n  const {\n    0: p3,\n    1: setP3\n  } = useState();\n  const {\n    0: p4,\n    1: setP4\n  } = useState();\n  useEffect(() => {\n    async function getData() {\n      const db_data = {\n        search: valueID\n      };\n      await axios.post(config.HTTP_API + '/store/search/products', db_data).then(result => {\n        result.data[0].product_first ? setP1(result.data[0].product_first) : null;\n        result.data[0].product_second ? setP2(result.data[0].product_second) : null;\n        result.data[0].product_third ? setP3(result.data[0].product_third) : null;\n        result.data[0].product_forth ? setP4(result.data[0].product_forth) : null;\n      });\n    }\n\n    async function fetchData() {\n      if (isInitialMount.current && valueID) {\n        isInitialMount.current = false;\n        await getData();\n      }\n\n      if (!isInitialMount.current && refresh) {\n        setP1('');\n        setP2('');\n        setP3('');\n        setP4('');\n        await getData();\n        setRefresh(false);\n      }\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", {\n    className: \"product-list\"\n  }, __jsx(\"h2\", {\n    style: {\n      marginBottom: '10px'\n    }\n  }, \"Selected products\"), __jsx(Stack, null, __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, p1)), __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, p2)), __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, p3)), __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, p4))));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/ProductList.js"],"names":["React","useState","useEffect","useRef","useContext","Card","Stack","Badge","useQuery","GET_PRODUCTS_BY_ID","axios","Refresh","config","require","ProductList","valueID","isInitialMount","productArray","setProductArray","refresh","setRefresh","p1","setP1","p2","setP2","p3","setP3","p4","setP4","getData","db_data","search","post","HTTP_API","then","result","data","product_first","product_second","product_third","product_forth","fetchData","current","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef,useContext } from 'react';\r\nimport {\r\n  Card,Stack,Badge\r\n} from '@shopify/polaris';\r\nimport { useQuery } from 'react-apollo';\r\nimport {GET_PRODUCTS_BY_ID} from '../../server/config/appBasicQuery.js';\r\nimport '../css/AppStyle.css';\r\nimport axios from 'axios';\r\nimport {Refresh} from './ProductPicker.js';\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction ProductList ({valueID}) {\r\n  const isInitialMount = useRef(true);\r\n  const [productArray, setProductArray] = useState();\r\n  let {refresh, setRefresh} = useContext(Refresh);\r\n  const [p1, setP1] = useState();\r\n  const [p2, setP2] = useState();\r\n  const [p3, setP3] = useState();\r\n  const [p4, setP4] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const db_data = {search:valueID};\r\n      await axios.post(config.HTTP_API + '/store/search/products', db_data).then(result => {\r\n        result.data[0].product_first ? setP1(result.data[0].product_first) : null;\r\n        result.data[0].product_second ? setP2(result.data[0].product_second) : null;\r\n        result.data[0].product_third ? setP3(result.data[0].product_third) : null;\r\n        result.data[0].product_forth ? setP4(result.data[0].product_forth) : null;\r\n      });\r\n    }\r\n    async function fetchData(){\r\n      if (isInitialMount.current && valueID) {\r\n       isInitialMount.current = false;\r\n       await getData();\r\n      }\r\n      if(!isInitialMount.current && refresh) {\r\n        setP1('');setP2('');setP3('');setP4('');\r\n        await getData();\r\n        setRefresh(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      <h2 style={{marginBottom:'10px'}}>Selected products</h2>\r\n      <Stack>\r\n        <Stack.Item><Badge status=\"success\">{p1}</Badge></Stack.Item>\r\n        <Stack.Item><Badge status=\"success\">{p2}</Badge></Stack.Item>\r\n        <Stack.Item><Badge status=\"success\">{p3}</Badge></Stack.Item>\r\n        <Stack.Item><Badge status=\"success\">{p4}</Badge></Stack.Item>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}