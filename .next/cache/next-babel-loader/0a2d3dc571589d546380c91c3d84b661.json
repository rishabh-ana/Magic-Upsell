{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, FormLayout, TextField, Toast, PageActions, Badge, Stack } from '@shopify/polaris';\nimport { useMutation } from 'react-apollo';\nimport axios from 'axios';\nimport { CREATE_DISCOUNT } from '../../server/config/appBasicQuery.js';\n\nconst config = require('../../server/config/httpConfig.js');\n\nfunction CreateDiscount({\n  valueID\n}) {\n  const isInitialMount = useRef(true);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(false);\n  const {\n    0: discount,\n    1: setDiscount\n  } = useState();\n  const {\n    0: coupon,\n    1: setCoupon\n  } = useState();\n  const {\n    0: message,\n    1: setMessage\n  } = useState();\n  const {\n    0: displayCode,\n    1: setDisplayCode\n  } = useState();\n  const {\n    0: errorMsgD,\n    1: setErrorMsgD\n  } = useState();\n  const {\n    0: errorMsgC,\n    1: setErrorMsgC\n  } = useState();\n  const {\n    0: showToast,\n    1: setToast\n  } = useState(false);\n  const [handleSubmit, {\n    error: discountError,\n    data: discountData\n  }] = useMutation(CREATE_DISCOUNT);\n\n  const handleDiscountChange = value => setDiscount(value);\n\n  const handleCouponChange = value => setCoupon(value);\n\n  const toggleToast = () => setToast(!showToast);\n\n  const toastMarkup = showToast ? __jsx(Toast, {\n    content: message,\n    onDismiss: toggleToast,\n    Diduration: 2500\n  }) : null;\n  useEffect(() => {\n    async function getData() {\n      const search_data = {\n        search: valueID\n      };\n      await axios.post(config.HTTP_API + '/store/search/discount', search_data).then(res => {\n        setDisplayCode(res.data[0].discount_code);\n      });\n    }\n\n    async function fetchData() {\n      if (isInitialMount.current && valueID) {\n        isInitialMount.current = false;\n        await getData();\n      }\n\n      if (!isInitialMount.current && refresh) {\n        await getData();\n        setRefresh(false);\n      }\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", null, toastMarkup, __jsx(Form, null, __jsx(FormLayout, null, __jsx(TextField, {\n    id: \"discount_percentage\",\n    placeholder: \"20\",\n    value: discount,\n    onChange: handleDiscountChange,\n    label: \"Discount percentage\",\n    type: \"number\",\n    error: errorMsgD\n  }), __jsx(TextField, {\n    id: \"coupon\",\n    placeholder: \"DEAL20\",\n    value: coupon,\n    onChange: handleCouponChange,\n    label: \"Coupon code\",\n    error: errorMsgC\n  }), __jsx(Stack, null, __jsx(Stack.Item, {\n    fill: true\n  }, __jsx(\"h2\", null, \"Current activated coupon code\")), __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, displayCode))), __jsx(PageActions, {\n    primaryAction: [{\n      content: 'Submit',\n      onAction: () => {\n        setErrorMsgC('');\n        setErrorMsgD('');\n        discount && coupon ? handleSubmit({\n          variables: {\n            basicCodeDiscount: {\n              title: coupon,\n              code: coupon,\n              startsAt: \"2019-01-01\",\n              customerSelection: {\n                all: true\n              },\n              customerGets: {\n                value: {\n                  percentage: discount / 100\n                },\n                items: {\n                  all: true\n                }\n              }\n            }\n          }\n        }).then(async ({\n          data\n        }) => {\n          setMessage('Successfully Created');\n          toggleToast();\n          const db_data = {\n            discount_code: coupon,\n            discount_value: discount\n          };\n          await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\n          setDiscount('');\n          setCoupon('');\n          setRefresh(true);\n        }) : discount ? setErrorMsgC('Discount code is required') : setErrorMsgD('Discount is required');\n      }\n    }]\n  }))));\n}\n\nexport default CreateDiscount;","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/CreateDiscount.js"],"names":["React","useState","useEffect","useRef","Form","FormLayout","TextField","Toast","PageActions","Badge","Stack","useMutation","axios","CREATE_DISCOUNT","config","require","CreateDiscount","valueID","isInitialMount","refresh","setRefresh","discount","setDiscount","coupon","setCoupon","message","setMessage","displayCode","setDisplayCode","errorMsgD","setErrorMsgD","errorMsgC","setErrorMsgC","showToast","setToast","handleSubmit","error","discountError","data","discountData","handleDiscountChange","value","handleCouponChange","toggleToast","toastMarkup","getData","search_data","search","post","HTTP_API","then","res","discount_code","fetchData","current","content","onAction","variables","basicCodeDiscount","title","code","startsAt","customerSelection","all","customerGets","percentage","items","db_data","discount_value","put"],"mappings":"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","sourcesContent":["import React, { useState,useEffect,useRef } from 'react';\r\nimport {\r\n  Form,\r\n  FormLayout,\r\n  TextField,\r\n  Toast,\r\n  PageActions,\r\n  Badge,\r\n  Stack,\r\n} from '@shopify/polaris';\r\nimport { useMutation } from 'react-apollo';\r\nimport axios from 'axios';\r\nimport {CREATE_DISCOUNT} from '../../server/config/appBasicQuery.js';\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction CreateDiscount({valueID}) {\r\n  const isInitialMount = useRef(true);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [discount, setDiscount] = useState();\r\n  const [coupon, setCoupon] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [displayCode, setDisplayCode] = useState();\r\n  const [errorMsgD, setErrorMsgD] = useState();\r\n  const [errorMsgC, setErrorMsgC] = useState();\r\n  const [showToast, setToast] = useState(false);\r\n  const [handleSubmit,{error:discountError, data:discountData}] = useMutation(CREATE_DISCOUNT);\r\n  const handleDiscountChange = (value) => setDiscount(value);\r\n  const handleCouponChange = (value) => setCoupon(value);\r\n  const toggleToast = () => setToast(!showToast);\r\n  const toastMarkup = showToast ? (\r\n        <Toast content={message} onDismiss={toggleToast} Diduration={2500} />\r\n    ) : null;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const search_data = {search:valueID};\r\n      await axios.post(config.HTTP_API + '/store/search/discount', search_data).then((res) => {\r\n        setDisplayCode(res.data[0].discount_code);\r\n      });\r\n    }\r\n    async function fetchData() {\r\n      if (isInitialMount.current && valueID) {\r\n        isInitialMount.current = false;\r\n        await getData();\r\n      }\r\n      if(!isInitialMount.current && refresh) {\r\n        await getData();\r\n        setRefresh(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n    {toastMarkup}\r\n      <Form>\r\n        <FormLayout>\r\n          <TextField\r\n            id=\"discount_percentage\"\r\n            placeholder = \"20\"\r\n            value={discount}\r\n            onChange={handleDiscountChange}\r\n            label=\"Discount percentage\"\r\n            type=\"number\"\r\n            error={errorMsgD}/>\r\n          <TextField\r\n            id=\"coupon\"\r\n            placeholder = \"DEAL20\"\r\n            value={coupon}\r\n            onChange={handleCouponChange}\r\n            label=\"Coupon code\"\r\n            error={errorMsgC}/>\r\n          <Stack>\r\n            <Stack.Item fill>\r\n              <h2>Current activated coupon code</h2>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n\t  \t<Badge status=\"success\">{displayCode}</Badge>\r\n            </Stack.Item>\r\n          </Stack>\r\n          <PageActions\r\n            primaryAction={[\r\n              {\r\n                content: 'Submit',\r\n                onAction: () => {\r\n                  setErrorMsgC('');\r\n                  setErrorMsgD('');\r\n                  discount&&coupon ?\r\n                  handleSubmit({\r\n                      variables:{\r\n                        basicCodeDiscount:{\r\n                          title:coupon,\r\n                          code:coupon,\r\n                          startsAt:\"2019-01-01\",\r\n                          customerSelection:{all:true},\r\n                          customerGets:{\r\n                            value:{percentage:discount/100},\r\n                            items:{all:true}\r\n                          }\r\n                        }\r\n                      }\r\n                    }).then(async({data})=>{\r\n                    setMessage('Successfully Created');\r\n                    toggleToast();\r\n                    const db_data = {discount_code: coupon,discount_value:discount};\r\n                    await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\r\n                    setDiscount('');\r\n                    setCoupon('');\r\n                    setRefresh(true);\r\n                  })\r\n                  :\r\n                  discount ? setErrorMsgC('Discount code is required') : setErrorMsgD('Discount is required');\r\n                }\r\n              }\r\n            ]}\r\n            />\r\n        </FormLayout>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDiscount;\r\n"]},"metadata":{},"sourceType":"module"}