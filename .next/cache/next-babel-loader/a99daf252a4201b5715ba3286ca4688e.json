{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Card, Button, SettingToggle } from '@shopify/polaris';\nimport '../css/AppStyle.css';\nimport axios from 'axios';\n\nvar config = require('../../server/config/httpConfig.js');\n\nfunction FirstAuto(_ref) {\n  _s();\n\n  var valueID = _ref.valueID;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var handleToggle = useCallback(function () {\n    return setActive(function (active) {\n      return !active;\n    });\n  }, []);\n  var contentStatus = active ? 'Disable' : 'Enable';\n  var isInitialMount = useRef(true);\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var db_data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                db_data = {\n                  search: valueID\n                };\n                _context.next = 3;\n                return axios.post(config.HTTP_API + '/store/search/firstauto', db_data).then(function (result) {\n                  result.data[0].first_auto == 1 ? setActive(true) : setActive(false);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    function fetchData() {\n      if (isInitialMount.current && valueID) {\n        isInitialMount.current = false;\n        getData();\n      }\n    }\n\n    fetchData();\n  });\n  return __jsx(Card, null, __jsx(SettingToggle, {\n    action: {\n      content: contentStatus,\n      onAction: function () {\n        var _onAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var db_data;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  db_data = {\n                    first_auto: !active\n                  };\n                  _context2.next = 3;\n                  return axios.put(config.HTTP_API + '/store/' + valueID, db_data);\n\n                case 3:\n                  setActive(!active);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function onAction() {\n          return _onAction.apply(this, arguments);\n        }\n\n        return onAction;\n      }()\n    },\n    enabled: active\n  }, \"Let first product always be the first product from the cart\"));\n}\n\n_s(FirstAuto, \"jeZr7X8lu70k2RcaQA7kPUxcuLk=\");\n\n_c = FirstAuto;\nexport default FirstAuto;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirstAuto\");","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/FirstAuto.js"],"names":["React","useState","useEffect","useRef","useCallback","Card","Button","SettingToggle","axios","config","require","FirstAuto","valueID","active","setActive","handleToggle","contentStatus","isInitialMount","getData","db_data","search","post","HTTP_API","then","result","data","first_auto","fetchData","current","content","onAction","put"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,MAAnC,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,mCAAD,CAAtB;;AAEA,SAASC,SAAT,OAA8B;AAAA;;AAAA,MAAVC,OAAU,QAAVA,OAAU;;AAAA,kBACAX,QAAQ,CAAC,KAAD,CADR;AAAA,MACrBY,MADqB;AAAA,MACbC,SADa;;AAE5B,MAAMC,YAAY,GAAGX,WAAW,CAAC;AAAA,WAAMU,SAAS,CAAC,UAACD,MAAD;AAAA,aAAY,CAACA,MAAb;AAAA,KAAD,CAAf;AAAA,GAAD,EAAuC,EAAvC,CAAhC;AACF,MAAMG,aAAa,GAAGH,MAAM,GAAG,SAAH,GAAe,QAA3C;AACA,MAAMI,cAAc,GAAGd,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AAAA,aACDgB,OADC;AAAA;AAAA;;AAAA;AAAA,0EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AACYC,gBAAAA,OADZ,GACsB;AAACC,kBAAAA,MAAM,EAACR;AAAR,iBADtB;AAAA;AAAA,uBAEYJ,KAAK,CAACa,IAAN,CAAWZ,MAAM,CAACa,QAAP,GAAkB,yBAA7B,EAAwDH,OAAxD,EAAiEI,IAAjE,CAAsE,UAAAC,MAAM,EAAI;AACpFA,kBAAAA,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeC,UAAf,IAA4B,CAA5B,GAAgCZ,SAAS,CAAC,IAAD,CAAzC,GAAkDA,SAAS,CAAC,KAAD,CAA3D;AACD,iBAFK,CAFZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADgB;AAAA;AAAA;;AAOhB,aAASa,SAAT,GAAqB;AACf,UAAIV,cAAc,CAACW,OAAf,IAA0BhB,OAA9B,EAAuC;AACrCK,QAAAA,cAAc,CAACW,OAAf,GAAyB,KAAzB;AACAV,QAAAA,OAAO;AACR;AACF;;AACDS,IAAAA,SAAS;AACZ,GAdQ,CAAT;AAeE,SACE,MAAC,IAAD,QACE,MAAC,aAAD;AACL,IAAA,MAAM,EAAE;AACNE,MAAAA,OAAO,EAAEb,aADH;AAEPc,MAAAA,QAAQ;AAAA,iFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACHX,kBAAAA,OADG,GACO;AAACO,oBAAAA,UAAU,EAAC,CAACb;AAAb,mBADP;AAAA;AAAA,yBAEHL,KAAK,CAACuB,GAAN,CAAUtB,MAAM,CAACa,QAAP,GAAkB,SAAlB,GAA8BV,OAAxC,EAAiDO,OAAjD,CAFG;;AAAA;AAGPL,kBAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;;AAHO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFD,KADH;AASL,IAAA,OAAO,EAAEA;AATJ,mEADF,CADF;AAiBD;;GAtCQF,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useState,useEffect,useRef,useCallback} from 'react';\r\nimport { Card, Button,SettingToggle } from '@shopify/polaris';\r\nimport '../css/AppStyle.css';\r\nimport axios from 'axios';\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction FirstAuto({valueID}) {\r\n  const [active, setActive] = useState(false);\r\n  const handleToggle = useCallback(() => setActive((active) => !active), []);\r\nconst contentStatus = active ? 'Disable' : 'Enable';\r\nconst isInitialMount = useRef(true);\r\n\r\nuseEffect(() => {\r\nasync function getData() {\r\n      const db_data = {search:valueID};\r\n      await axios.post(config.HTTP_API + '/store/search/firstauto', db_data).then(result => {\r\n        result.data[0].first_auto ==1 ? setActive(true) : setActive(false);\r\n      });\r\n    }\r\nfunction fetchData() {\r\n      if (isInitialMount.current && valueID) {\r\n        isInitialMount.current = false;\r\n        getData();\r\n      }\r\n    }\r\n    fetchData();\r\n});\r\n  return (\r\n    <Card>\r\n      <SettingToggle\r\n\taction={{\r\n\t  content: contentStatus,\r\n\t onAction: async () => {\r\n\t  const db_data = {first_auto:!active};\r\n\t  await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\r\n\t    setActive(!active);\r\n\t}\r\n\t}}\r\n\tenabled={active}\r\n\t>\r\n\tLet first product always be the first product from the cart\r\n\t</SettingToggle>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default FirstAuto;\r\n"]},"metadata":{},"sourceType":"module"}