{"ast":null,"code":"import gql from 'graphql-tag';\nexport const GET_SHOP_ID = gql`\nquery {\n  shop {\n    id\n  }\n}\n`;\nexport const CREATE_DISCOUNT = gql`\nmutation discountCodeBasicCreate($basicCodeDiscount: DiscountCodeBasicInput!) {\n  discountCodeBasicCreate(basicCodeDiscount: $basicCodeDiscount) {\n    codeDiscountNode {\n      id\n    }\n    userErrors {\n      code\n      field\n      message\n    }\n  }\n}\n`;\nexport const DELETE_SCRIPT = gql`\nmutation scriptTagDelete($id: ID!) {\n  scriptTagDelete(id: $id) {\n    deletedScriptTagId\n    userErrors {\n      field\n      message\n    }\n  }\n}\n`;\nexport const CREATE_SCRIPT = gql`\nmutation scriptTagCreate($input: ScriptTagInput!) {\n  scriptTagCreate(input: $input) {\n    scriptTag {\n      id\n    }\n    userErrors {\n      field\n      message\n    }\n  }\n}\n`;\nexport const SEARCH_ORDERS_UPSELL = gql`\nquery ($query: String){\n  orders(first: 100,query: $query) {\n    edges {\n      node {\n        totalPriceSet {\n          presentmentMoney {\n            amount\n          }\n        }\n      }\n    }\n  }\n}\n`;\nexport const SEARCH_ORDERS_TOTAL = gql`\nquery ($query: String){\n  orders(first: 100,query: $query) {\n    edges {\n      node {\n        totalPriceSet {\n          presentmentMoney {\n            amount\n          }\n        }\n      }\n    }\n  }\n}\n`;\nexport const CREATE_RECURRING = gql`\nmutation appSubscriptionCreate($name: String!, $lineItems: [AppSubscriptionLineItemInput!]!, $returnUrl: URL!, $trialDays: Int) {\n  appSubscriptionCreate(name: $name, lineItems: $lineItems, returnUrl: $returnUrl, trialDays: $trialDays) {\nappSubscription {\n      id\n    }    \nconfirmationUrl\n    userErrors {\n      field\n      message\n    }\n  }\n}\n`;\nexport const GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/server/config/appBasicQuery.js"],"names":["gql","GET_SHOP_ID","CREATE_DISCOUNT","DELETE_SCRIPT","CREATE_SCRIPT","SEARCH_ORDERS_UPSELL","SEARCH_ORDERS_TOTAL","CREATE_RECURRING","GET_PRODUCTS_BY_ID"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,MAAME,eAAe,GAAGF,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO;AAeP,OAAO,MAAMG,aAAa,GAAGH,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP,OAAO,MAAMI,aAAa,GAAGJ,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP,OAAO,MAAMK,oBAAoB,GAAGL,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,OAAO,MAAMM,mBAAmB,GAAGN,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,OAAO,MAAMO,gBAAgB,GAAGP,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO;AAeP,OAAO,MAAMQ,kBAAkB,GAAGR,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const GET_SHOP_ID = gql`\r\nquery {\r\n  shop {\r\n    id\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_DISCOUNT = gql`\r\nmutation discountCodeBasicCreate($basicCodeDiscount: DiscountCodeBasicInput!) {\r\n  discountCodeBasicCreate(basicCodeDiscount: $basicCodeDiscount) {\r\n    codeDiscountNode {\r\n      id\r\n    }\r\n    userErrors {\r\n      code\r\n      field\r\n      message\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const DELETE_SCRIPT = gql`\r\nmutation scriptTagDelete($id: ID!) {\r\n  scriptTagDelete(id: $id) {\r\n    deletedScriptTagId\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_SCRIPT = gql`\r\nmutation scriptTagCreate($input: ScriptTagInput!) {\r\n  scriptTagCreate(input: $input) {\r\n    scriptTag {\r\n      id\r\n    }\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const SEARCH_ORDERS_UPSELL = gql`\r\nquery ($query: String){\r\n  orders(first: 100,query: $query) {\r\n    edges {\r\n      node {\r\n        totalPriceSet {\r\n          presentmentMoney {\r\n            amount\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const SEARCH_ORDERS_TOTAL = gql`\r\nquery ($query: String){\r\n  orders(first: 100,query: $query) {\r\n    edges {\r\n      node {\r\n        totalPriceSet {\r\n          presentmentMoney {\r\n            amount\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_RECURRING = gql`\r\nmutation appSubscriptionCreate($name: String!, $lineItems: [AppSubscriptionLineItemInput!]!, $returnUrl: URL!, $trialDays: Int) {\r\n  appSubscriptionCreate(name: $name, lineItems: $lineItems, returnUrl: $returnUrl, trialDays: $trialDays) {\r\nappSubscription {\r\n      id\r\n    }    \r\nconfirmationUrl\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}