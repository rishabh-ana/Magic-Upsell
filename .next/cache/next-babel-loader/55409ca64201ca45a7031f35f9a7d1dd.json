{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useQuery } from 'react-apollo';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Layout, Card, DataTable } from '@shopify/polaris';\nimport { SEARCH_ORDERS_UPSELL, SEARCH_ORDERS_TOTAL } from '../../server/config/appBasicQuery.js';\n\nfunction fetchDate(d) {\n  var today = new Date();\n  var yesterday = new Date(today);\n  yesterday.setDate(yesterday.getDate() - 1);\n  var lastWeek = new Date(today);\n  lastWeek.setDate(lastWeek.getDate() - 8);\n  var dateArray = {};\n\n  switch (d) {\n    case 'today':\n      dateArray[0] = 'created_at:' + today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      dateArray[1] = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n      return dateArray;\n\n    case 'yesterday':\n      dateArray[0] = 'created_at:' + yesterday.getFullYear() + '-' + (yesterday.getMonth() + 1) + '-' + yesterday.getDate();\n      dateArray[1] = yesterday.getFullYear() + '-' + (yesterday.getMonth() + 1) + '-' + yesterday.getDate();\n      return dateArray;\n\n    case 'lastWeek':\n      dateArray[0] = 'created_at:>=' + lastWeek.getFullYear() + '-' + (lastWeek.getMonth() + 1) + '-' + lastWeek.getDate() + ' created_at:<=' + yesterday.getFullYear() + '-' + (yesterday.getMonth() + 1) + '-' + yesterday.getDate();\n      dateArray[1] = lastWeek.getFullYear() + '-' + (lastWeek.getMonth() + 1) + '-' + lastWeek.getDate() + ' to ' + yesterday.getFullYear() + '-' + (yesterday.getMonth() + 1) + '-' + yesterday.getDate();\n      return dateArray;\n\n    default:\n      dateArray[0] = d;\n      var td = [];\n\n      for (var i = 13; i < d.length;) {\n        if (d[i] === 'c') {\n          td[i - 13] = ' to ';\n          i = i + 13;\n        } else {\n          td[i - 13] = d[i];\n          i++;\n        }\n      }\n\n      dateArray[1] = td;\n      console.log(dateArray);\n      return dateArray;\n  }\n}\n\nfunction SearchOrdersUpsell(dc, d) {\n  _s();\n\n  var _useQuery = useQuery(SEARCH_ORDERS_UPSELL, {\n    variables: {\n      query: d + ' ' + dc\n    }\n  }),\n      upsellLoading = _useQuery.loading,\n      upsellError = _useQuery.error,\n      upsellData = _useQuery.data;\n\n  if (upsellLoading) return 'Loading...';\n  if (upsellError) return \"Error! \".concat(upsellError.message);\n\n  if (upsellData && upsellData.orders.edges.length != 0 && dc != ' ') {\n    var _final = 0;\n\n    for (var i = 0; i < upsellData.orders.edges.length; i++) {\n      _final += parseFloat(upsellData.orders.edges[i].node.totalPriceSet.presentmentMoney.amount);\n    }\n\n    return _final.toFixed(1);\n  } else return '0';\n}\n\n_s(SearchOrdersUpsell, \"2S04nLr4CzA3vhHNQsmELmJeaKc=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchOrdersUpsell;\n\nfunction SearchOrdersTotal(d) {\n  _s2();\n\n  var _useQuery2 = useQuery(SEARCH_ORDERS_TOTAL, {\n    variables: {\n      query: d\n    }\n  }),\n      totalLoading = _useQuery2.loading,\n      totalError = _useQuery2.error,\n      totalData = _useQuery2.data;\n\n  if (totalLoading) return 'Loading...';\n  if (totalError) return \"Error! \".concat(totalError.message);\n\n  if (totalData && totalData.orders.edges.length != 0) {\n    var _final2 = 0;\n\n    for (var i = 0; i < totalData.orders.edges.length; i++) {\n      _final2 += parseFloat(totalData.orders.edges[i].node.totalPriceSet.presentmentMoney.amount);\n    }\n\n    return _final2.toFixed(1);\n  } else return '0';\n}\n\n_s2(SearchOrdersTotal, \"djJ/h2P6L6/pdGh/OpjB548geAI=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = SearchOrdersTotal;\n\nfunction Percentage(x, y) {\n  var percentage = x / y * 100 + '%';\n  if (percentage != 'NaN%') return percentage;else return '0';\n}\n\n_c3 = Percentage;\n\nfunction DisplayOrders(_ref) {\n  var valueCODE = _ref.valueCODE;\n  var date = fetchDate(valueCODE.date)[0];\n  var upsellPirce = SearchOrdersUpsell(valueCODE.coupon, date);\n  var totalPrice = SearchOrdersTotal(date);\n  var rows = [[fetchDate(valueCODE.date)[1], upsellPirce, totalPrice, Percentage(upsellPirce, totalPrice)]];\n  return __jsx(DataTable, {\n    columnContentTypes: ['text', 'numeric', 'numeric', 'text'],\n    headings: ['Date', 'Upsell(with discount) Sale', 'Total Sale', 'Percentage'],\n    rows: rows\n  });\n}\n\n_c4 = DisplayOrders;\nexport default DisplayOrders;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SearchOrdersUpsell\");\n$RefreshReg$(_c2, \"SearchOrdersTotal\");\n$RefreshReg$(_c3, \"Percentage\");\n$RefreshReg$(_c4, \"DisplayOrders\");","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/DisplayOrders.js"],"names":["useQuery","React","useState","useEffect","useRef","Layout","Card","DataTable","SEARCH_ORDERS_UPSELL","SEARCH_ORDERS_TOTAL","fetchDate","d","today","Date","yesterday","setDate","getDate","lastWeek","dateArray","getFullYear","getMonth","td","i","length","console","log","SearchOrdersUpsell","dc","variables","query","upsellLoading","loading","upsellError","error","upsellData","data","message","orders","edges","final","parseFloat","node","totalPriceSet","presentmentMoney","amount","toFixed","SearchOrdersTotal","totalLoading","totalError","totalData","Percentage","x","y","percentage","DisplayOrders","valueCODE","date","upsellPirce","coupon","totalPrice","rows"],"mappings":"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","sourcesContent":["import { useQuery } from 'react-apollo';\r\nimport React, { useState,useEffect,useRef } from 'react';\r\nimport {\r\n  Layout,\r\n  Card,\r\n  DataTable,\r\n} from '@shopify/polaris';\r\nimport {SEARCH_ORDERS_UPSELL,SEARCH_ORDERS_TOTAL} from '../../server/config/appBasicQuery.js';\r\n\r\nfunction fetchDate(d) {\r\n  const today = new Date();\r\n  const yesterday = new Date(today);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  const lastWeek = new Date(today);\r\n  lastWeek.setDate(lastWeek.getDate() - 8);\r\n  var dateArray = {};\r\n  switch(d) {\r\n    case 'today':\r\n      dateArray[0] = 'created_at:'+today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n      dateArray[1] = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n      return dateArray;\r\n    case 'yesterday':\r\n      dateArray[0] = 'created_at:'+yesterday.getFullYear()+'-'+(yesterday.getMonth()+1)+'-'+yesterday.getDate();\r\n      dateArray[1] = yesterday.getFullYear()+'-'+(yesterday.getMonth()+1)+'-'+yesterday.getDate();\r\n      return dateArray;\r\n    case 'lastWeek':\r\n      dateArray[0] = 'created_at:>='+lastWeek.getFullYear()+'-'+(lastWeek.getMonth()+1)+'-'+lastWeek.getDate()+' created_at:<='+yesterday.getFullYear()+'-'+(yesterday.getMonth()+1)+'-'+yesterday.getDate();\r\n      dateArray[1] = lastWeek.getFullYear()+'-'+(lastWeek.getMonth()+1)+'-'+lastWeek.getDate()+' to '+yesterday.getFullYear()+'-'+(yesterday.getMonth()+1)+'-'+yesterday.getDate();\r\n      return dateArray;\r\n    default:\r\n      dateArray[0] = d;\r\n      var td = [];\r\n      for(var i = 13; i < d.length;) {\r\n        if(d[i]==='c') {\r\n          td[i-13] = ' to ';\r\n          i = i+13;\r\n        }\r\n        else{td[i-13] = d[i];i++;}\r\n      }\r\n      dateArray[1] = td;\r\nconsole.log(dateArray);\r\n      return dateArray;\r\n  }\r\n}\r\n\r\nfunction SearchOrdersUpsell (dc,d) {\r\n  const { loading:upsellLoading, error:upsellError, data:upsellData } = useQuery(SEARCH_ORDERS_UPSELL,{\r\n    variables:{query:d+' '+dc}\r\n  });\r\n  if (upsellLoading) return 'Loading...';\r\n  if (upsellError) return `Error! ${upsellError.message}`;\r\n  if (upsellData && upsellData.orders.edges.length!=0 && dc!=' ') {\r\nlet final = 0;\r\nfor(let i =0;i<upsellData.orders.edges.length;i++){final+=parseFloat(upsellData.orders.edges[i].node.totalPriceSet.presentmentMoney.amount);}\r\nreturn final.toFixed(1);\r\n}\r\n  else return '0';\r\n}\r\n\r\nfunction SearchOrdersTotal(d) {\r\n  const { loading:totalLoading, error:totalError, data:totalData } = useQuery(SEARCH_ORDERS_TOTAL,{\r\n    variables:{query:d}\r\n  });\r\n  if (totalLoading) return 'Loading...';\r\n  if (totalError) return `Error! ${totalError.message}`;\r\n  if (totalData && totalData.orders.edges.length!=0) {\r\nlet final = 0;\r\nfor(let i =0;i<totalData.orders.edges.length;i++){final+=parseFloat(totalData.orders.edges[i].node.totalPriceSet.presentmentMoney.amount);}\r\nreturn final.toFixed(1);\r\n}\r\n  else return '0';\r\n}\r\n\r\nfunction Percentage(x,y) {\r\n  const percentage = x/y*100+'%';\r\n  if(percentage != 'NaN%') return percentage;\r\n  else return '0';\r\n}\r\n\r\nfunction DisplayOrders({valueCODE}) {\r\n  const date = fetchDate(valueCODE.date)[0];\r\n  const upsellPirce = SearchOrdersUpsell(valueCODE.coupon,date);\r\n  const totalPrice = SearchOrdersTotal(date);\r\n  const rows = [[fetchDate(valueCODE.date)[1], upsellPirce, totalPrice, Percentage(upsellPirce,totalPrice)]];\r\n\r\n  return (\r\n    <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'numeric',\r\n            'numeric',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'Date',\r\n            'Upsell(with discount) Sale',\r\n            'Total Sale',\r\n            'Percentage',\r\n          ]}\r\n          rows={rows}\r\n        />\r\n  );\r\n}\r\n\r\n\r\nexport default DisplayOrders;\r\n"]},"metadata":{},"sourceType":"module"}