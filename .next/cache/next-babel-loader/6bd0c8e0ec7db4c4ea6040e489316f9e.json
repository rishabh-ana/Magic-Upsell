{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Form, FormLayout, TextField, Toast, PageActions, Badge, Stack } from '@shopify/polaris';\nimport { useMutation } from 'react-apollo';\nimport axios from 'axios';\nimport { CREATE_DISCOUNT } from '../../server/config/appBasicQuery.js';\n\nvar config = require('../../server/config/httpConfig.js');\n\nfunction CreateDiscount(_ref) {\n  _s();\n\n  var valueID = _ref.valueID;\n  var isInitialMount = useRef(true);\n\n  var _useState = useState(false),\n      refresh = _useState[0],\n      setRefresh = _useState[1];\n\n  var _useState2 = useState(),\n      discount = _useState2[0],\n      setDiscount = _useState2[1];\n\n  var _useState3 = useState(),\n      coupon = _useState3[0],\n      setCoupon = _useState3[1];\n\n  var _useState4 = useState(),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var _useState5 = useState(),\n      displayCode = _useState5[0],\n      setDisplayCode = _useState5[1];\n\n  var _useState6 = useState(),\n      errorMsgD = _useState6[0],\n      setErrorMsgD = _useState6[1];\n\n  var _useState7 = useState(),\n      errorMsgC = _useState7[0],\n      setErrorMsgC = _useState7[1];\n\n  var _useState8 = useState(false),\n      showToast = _useState8[0],\n      setToast = _useState8[1];\n\n  var _useMutation = useMutation(CREATE_DISCOUNT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      handleSubmit = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      discountError = _useMutation2$.error,\n      discountData = _useMutation2$.data;\n\n  var handleDiscountChange = function handleDiscountChange(value) {\n    return setDiscount(value);\n  };\n\n  var handleCouponChange = function handleCouponChange(value) {\n    return setCoupon(value);\n  };\n\n  var toggleToast = function toggleToast() {\n    return setToast(!showToast);\n  };\n\n  var toastMarkup = showToast ? __jsx(Toast, {\n    content: message,\n    onDismiss: toggleToast,\n    Diduration: 2500\n  }) : null;\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var search_data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                search_data = {\n                  search: valueID\n                };\n                _context.next = 3;\n                return axios.post(config.HTTP_API + '/store/search/discount', search_data).then(function (res) {\n                  setDisplayCode(res.data[0].discount_code);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(isInitialMount.current && valueID)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                isInitialMount.current = false;\n                _context2.next = 4;\n                return getData();\n\n              case 4:\n                if (!(!isInitialMount.current && refresh)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 7;\n                return getData();\n\n              case 7:\n                setRefresh(false);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", null, toastMarkup, __jsx(Form, null, __jsx(FormLayout, null, __jsx(TextField, {\n    id: \"discount_percentage\",\n    placeholder: \"20\",\n    value: discount,\n    onChange: handleDiscountChange,\n    label: \"Discount percentage\",\n    type: \"number\",\n    error: errorMsgD\n  }), __jsx(TextField, {\n    id: \"coupon\",\n    placeholder: \"DEAL20\",\n    value: coupon,\n    onChange: handleCouponChange,\n    label: \"Coupon code\",\n    error: errorMsgC\n  }), __jsx(Stack, null, __jsx(Stack.Item, {\n    fill: true\n  }, __jsx(\"h2\", null, \"Current activated coupon code\")), __jsx(Stack.Item, null, __jsx(Badge, {\n    status: \"success\"\n  }, displayCode))), __jsx(PageActions, {\n    primaryAction: [{\n      content: 'Submit',\n      onAction: function onAction() {\n        setErrorMsgC('');\n        setErrorMsgD('');\n        discount && coupon ? handleSubmit({\n          variables: {\n            basicCodeDiscount: {\n              title: coupon,\n              code: coupon,\n              startsAt: \"2019-01-01\",\n              customerSelection: {\n                all: true\n              },\n              customerGets: {\n                value: {\n                  percentage: discount / 100\n                },\n                items: {\n                  all: true\n                }\n              }\n            }\n          }\n        }).then( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2) {\n            var data, db_data;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    data = _ref2.data;\n                    setMessage('Successfully Created');\n                    toggleToast();\n                    db_data = {\n                      discount_code: coupon,\n                      discount_value: discount\n                    };\n                    _context3.next = 6;\n                    return axios.put(config.HTTP_API + '/store/' + valueID, db_data);\n\n                  case 6:\n                    setDiscount('');\n                    setCoupon('');\n                    setRefresh(true);\n\n                  case 9:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()) : discount ? setErrorMsgC('Discount code is required') : setErrorMsgD('Discount is required');\n      }\n    }]\n  }))));\n}\n\n_s(CreateDiscount, \"PuJgvZ+/mNFkM3QfxcE+LHhKlZ0=\", false, function () {\n  return [useMutation];\n});\n\n_c = CreateDiscount;\nexport default CreateDiscount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDiscount\");","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/CreateDiscount.js"],"names":["React","useState","useEffect","useRef","Form","FormLayout","TextField","Toast","PageActions","Badge","Stack","useMutation","axios","CREATE_DISCOUNT","config","require","CreateDiscount","valueID","isInitialMount","refresh","setRefresh","discount","setDiscount","coupon","setCoupon","message","setMessage","displayCode","setDisplayCode","errorMsgD","setErrorMsgD","errorMsgC","setErrorMsgC","showToast","setToast","handleSubmit","discountError","error","discountData","data","handleDiscountChange","value","handleCouponChange","toggleToast","toastMarkup","getData","search_data","search","post","HTTP_API","then","res","discount_code","fetchData","current","content","onAction","variables","basicCodeDiscount","title","code","startsAt","customerSelection","all","customerGets","percentage","items","db_data","discount_value","put"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,KAPF,QAQO,kBARP;AASA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,sCAA9B;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,mCAAD,CAAtB;;AAEA,SAASC,cAAT,OAAmC;AAAA;;AAAA,MAAVC,OAAU,QAAVA,OAAU;AACjC,MAAMC,cAAc,GAAGf,MAAM,CAAC,IAAD,CAA7B;;AADiC,kBAEHF,QAAQ,CAAC,KAAD,CAFL;AAAA,MAE1BkB,OAF0B;AAAA,MAEjBC,UAFiB;;AAAA,mBAGDnB,QAAQ,EAHP;AAAA,MAG1BoB,QAH0B;AAAA,MAGhBC,WAHgB;;AAAA,mBAILrB,QAAQ,EAJH;AAAA,MAI1BsB,MAJ0B;AAAA,MAIlBC,SAJkB;;AAAA,mBAKHvB,QAAQ,EALL;AAAA,MAK1BwB,OAL0B;AAAA,MAKjBC,UALiB;;AAAA,mBAMKzB,QAAQ,EANb;AAAA,MAM1B0B,WAN0B;AAAA,MAMbC,cANa;;AAAA,mBAOC3B,QAAQ,EAPT;AAAA,MAO1B4B,SAP0B;AAAA,MAOfC,YAPe;;AAAA,mBAQC7B,QAAQ,EART;AAAA,MAQ1B8B,SAR0B;AAAA,MAQfC,YARe;;AAAA,mBASH/B,QAAQ,CAAC,KAAD,CATL;AAAA,MAS1BgC,SAT0B;AAAA,MASfC,QATe;;AAAA,qBAU+BvB,WAAW,CAACE,eAAD,CAV1C;AAAA;AAAA,MAU1BsB,YAV0B;AAAA;AAAA,MAUNC,aAVM,kBAUZC,KAVY;AAAA,MAUcC,YAVd,kBAUSC,IAVT;;AAWjC,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD;AAAA,WAAWnB,WAAW,CAACmB,KAAD,CAAtB;AAAA,GAA7B;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,KAAD;AAAA,WAAWjB,SAAS,CAACiB,KAAD,CAApB;AAAA,GAA3B;;AACA,MAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMT,QAAQ,CAAC,CAACD,SAAF,CAAd;AAAA,GAApB;;AACA,MAAMW,WAAW,GAAGX,SAAS,GACvB,MAAC,KAAD;AAAO,IAAA,OAAO,EAAER,OAAhB;AAAyB,IAAA,SAAS,EAAEkB,WAApC;AAAiD,IAAA,UAAU,EAAE;AAA7D,IADuB,GAEvB,IAFN;AAIAzC,EAAAA,SAAS,CAAC,YAAM;AAAA,aACC2C,OADD;AAAA;AAAA;;AAAA;AAAA,0EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,WADR,GACsB;AAACC,kBAAAA,MAAM,EAAC9B;AAAR,iBADtB;AAAA;AAAA,uBAEQL,KAAK,CAACoC,IAAN,CAAWlC,MAAM,CAACmC,QAAP,GAAkB,wBAA7B,EAAuDH,WAAvD,EAAoEI,IAApE,CAAyE,UAACC,GAAD,EAAS;AACtFvB,kBAAAA,cAAc,CAACuB,GAAG,CAACZ,IAAJ,CAAS,CAAT,EAAYa,aAAb,CAAd;AACD,iBAFK,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAAA,aAOCC,SAPD;AAAA;AAAA;;AAAA;AAAA,4EAOd;AAAA;AAAA;AAAA;AAAA;AAAA,sBACMnC,cAAc,CAACoC,OAAf,IAA0BrC,OADhC;AAAA;AAAA;AAAA;;AAEIC,gBAAAA,cAAc,CAACoC,OAAf,GAAyB,KAAzB;AAFJ;AAAA,uBAGUT,OAAO,EAHjB;;AAAA;AAAA,sBAKK,CAAC3B,cAAc,CAACoC,OAAhB,IAA2BnC,OALhC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMU0B,OAAO,EANjB;;AAAA;AAOIzB,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPc;AAAA;AAAA;;AAiBdiC,IAAAA,SAAS;AACV,GAlBQ,CAAT;AAoBA,SACE,mBACCT,WADD,EAEE,MAAC,IAAD,QACE,MAAC,UAAD,QACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,WAAW,EAAG,IAFhB;AAGE,IAAA,KAAK,EAAEvB,QAHT;AAIE,IAAA,QAAQ,EAAEmB,oBAJZ;AAKE,IAAA,KAAK,EAAC,qBALR;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,KAAK,EAAEX;AAPT,IADF,EASE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,WAAW,EAAG,QAFhB;AAGE,IAAA,KAAK,EAAEN,MAHT;AAIE,IAAA,QAAQ,EAAEmB,kBAJZ;AAKE,IAAA,KAAK,EAAC,aALR;AAME,IAAA,KAAK,EAAEX;AANT,IATF,EAgBE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,IAAA,IAAI;AAAhB,KACE,kDADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP,QACR,MAAC,KAAD;AAAO,IAAA,MAAM,EAAC;AAAd,KAAyBJ,WAAzB,CADQ,CAJF,CAhBF,EAwBE,MAAC,WAAD;AACE,IAAA,aAAa,EAAE,CACb;AACE4B,MAAAA,OAAO,EAAE,QADX;AAEEC,MAAAA,QAAQ,EAAE,oBAAM;AACdxB,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAT,QAAAA,QAAQ,IAAEE,MAAV,GACAY,YAAY,CAAC;AACTsB,UAAAA,SAAS,EAAC;AACRC,YAAAA,iBAAiB,EAAC;AAChBC,cAAAA,KAAK,EAACpC,MADU;AAEhBqC,cAAAA,IAAI,EAACrC,MAFW;AAGhBsC,cAAAA,QAAQ,EAAC,YAHO;AAIhBC,cAAAA,iBAAiB,EAAC;AAACC,gBAAAA,GAAG,EAAC;AAAL,eAJF;AAKhBC,cAAAA,YAAY,EAAC;AACXvB,gBAAAA,KAAK,EAAC;AAACwB,kBAAAA,UAAU,EAAC5C,QAAQ,GAAC;AAArB,iBADK;AAEX6C,gBAAAA,KAAK,EAAC;AAACH,kBAAAA,GAAG,EAAC;AAAL;AAFK;AALG;AADV;AADD,SAAD,CAAZ,CAaKb,IAbL;AAAA,+EAaU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOX,oBAAAA,IAAP,SAAOA,IAAP;AACRb,oBAAAA,UAAU,CAAC,sBAAD,CAAV;AACAiB,oBAAAA,WAAW;AACLwB,oBAAAA,OAHE,GAGQ;AAACf,sBAAAA,aAAa,EAAE7B,MAAhB;AAAuB6C,sBAAAA,cAAc,EAAC/C;AAAtC,qBAHR;AAAA;AAAA,2BAIFT,KAAK,CAACyD,GAAN,CAAUvD,MAAM,CAACmC,QAAP,GAAkB,SAAlB,GAA8BhC,OAAxC,EAAiDkD,OAAjD,CAJE;;AAAA;AAKR7C,oBAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,oBAAAA,SAAS,CAAC,EAAD,CAAT;AACAJ,oBAAAA,UAAU,CAAC,IAAD,CAAV;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbV;;AAAA;AAAA;AAAA;AAAA,YADA,GAwBAC,QAAQ,GAAGW,YAAY,CAAC,2BAAD,CAAf,GAA+CF,YAAY,CAAC,sBAAD,CAxBnE;AAyBD;AA9BH,KADa;AADjB,IAxBF,CADF,CAFF,CADF;AAoED;;GA1GQd,c;UAUyDL,W;;;KAVzDK,c;AA4GT,eAAeA,cAAf","sourcesContent":["import React, { useState,useEffect,useRef } from 'react';\r\nimport {\r\n  Form,\r\n  FormLayout,\r\n  TextField,\r\n  Toast,\r\n  PageActions,\r\n  Badge,\r\n  Stack,\r\n} from '@shopify/polaris';\r\nimport { useMutation } from 'react-apollo';\r\nimport axios from 'axios';\r\nimport {CREATE_DISCOUNT} from '../../server/config/appBasicQuery.js';\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction CreateDiscount({valueID}) {\r\n  const isInitialMount = useRef(true);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [discount, setDiscount] = useState();\r\n  const [coupon, setCoupon] = useState();\r\n  const [message, setMessage] = useState();\r\n  const [displayCode, setDisplayCode] = useState();\r\n  const [errorMsgD, setErrorMsgD] = useState();\r\n  const [errorMsgC, setErrorMsgC] = useState();\r\n  const [showToast, setToast] = useState(false);\r\n  const [handleSubmit,{error:discountError, data:discountData}] = useMutation(CREATE_DISCOUNT);\r\n  const handleDiscountChange = (value) => setDiscount(value);\r\n  const handleCouponChange = (value) => setCoupon(value);\r\n  const toggleToast = () => setToast(!showToast);\r\n  const toastMarkup = showToast ? (\r\n        <Toast content={message} onDismiss={toggleToast} Diduration={2500} />\r\n    ) : null;\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const search_data = {search:valueID};\r\n      await axios.post(config.HTTP_API + '/store/search/discount', search_data).then((res) => {\r\n        setDisplayCode(res.data[0].discount_code);\r\n      });\r\n    }\r\n    async function fetchData() {\r\n      if (isInitialMount.current && valueID) {\r\n        isInitialMount.current = false;\r\n        await getData();\r\n      }\r\n      if(!isInitialMount.current && refresh) {\r\n        await getData();\r\n        setRefresh(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n    {toastMarkup}\r\n      <Form>\r\n        <FormLayout>\r\n          <TextField\r\n            id=\"discount_percentage\"\r\n            placeholder = \"20\"\r\n            value={discount}\r\n            onChange={handleDiscountChange}\r\n            label=\"Discount percentage\"\r\n            type=\"number\"\r\n            error={errorMsgD}/>\r\n          <TextField\r\n            id=\"coupon\"\r\n            placeholder = \"DEAL20\"\r\n            value={coupon}\r\n            onChange={handleCouponChange}\r\n            label=\"Coupon code\"\r\n            error={errorMsgC}/>\r\n          <Stack>\r\n            <Stack.Item fill>\r\n              <h2>Current activated coupon code</h2>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n\t  \t<Badge status=\"success\">{displayCode}</Badge>\r\n            </Stack.Item>\r\n          </Stack>\r\n          <PageActions\r\n            primaryAction={[\r\n              {\r\n                content: 'Submit',\r\n                onAction: () => {\r\n                  setErrorMsgC('');\r\n                  setErrorMsgD('');\r\n                  discount&&coupon ?\r\n                  handleSubmit({\r\n                      variables:{\r\n                        basicCodeDiscount:{\r\n                          title:coupon,\r\n                          code:coupon,\r\n                          startsAt:\"2019-01-01\",\r\n                          customerSelection:{all:true},\r\n                          customerGets:{\r\n                            value:{percentage:discount/100},\r\n                            items:{all:true}\r\n                          }\r\n                        }\r\n                      }\r\n                    }).then(async({data})=>{\r\n                    setMessage('Successfully Created');\r\n                    toggleToast();\r\n                    const db_data = {discount_code: coupon,discount_value:discount};\r\n                    await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\r\n                    setDiscount('');\r\n                    setCoupon('');\r\n                    setRefresh(true);\r\n                  })\r\n                  :\r\n                  discount ? setErrorMsgC('Discount code is required') : setErrorMsgD('Discount is required');\r\n                }\r\n              }\r\n            ]}\r\n            />\r\n        </FormLayout>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateDiscount;\r\n"]},"metadata":{},"sourceType":"module"}