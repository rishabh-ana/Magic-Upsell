{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Card, Button, SettingToggle } from '@shopify/polaris';\nimport '../css/AppStyle.css';\nimport axios from 'axios';\n\nconst config = require('../../server/config/httpConfig.js');\n\nfunction FirstAuto({\n  valueID\n}) {\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const handleToggle = useCallback(() => setActive(active => !active), []);\n  const contentStatus = active ? 'Disable' : 'Enable';\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    async function getData() {\n      const db_data = {\n        search: valueID\n      };\n      await axios.post(config.HTTP_API + '/store/search/firstauto', db_data).then(result => {\n        result.data[0].first_auto == 1 ? setActive(true) : setActive(false);\n      });\n    }\n\n    function fetchData() {\n      if (isInitialMount.current && valueID) {\n        isInitialMount.current = false;\n        getData();\n      }\n    }\n\n    fetchData();\n  });\n  return __jsx(Card, null, __jsx(SettingToggle, {\n    action: {\n      content: contentStatus,\n      onAction: async () => {\n        const db_data = {\n          first_auto: !active\n        };\n        await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\n        setActive(!active);\n      }\n    },\n    enabled: active\n  }, \"Let first product always be the first product from the cart\"));\n}\n\nexport default FirstAuto;","map":{"version":3,"sources":["C:/Users/molek/OneDrive/Desktop/Work/Magic-Upsell/client/components/FirstAuto.js"],"names":["React","useState","useEffect","useRef","useCallback","Card","Button","SettingToggle","axios","config","require","FirstAuto","valueID","active","setActive","handleToggle","contentStatus","isInitialMount","getData","db_data","search","post","HTTP_API","then","result","data","first_auto","fetchData","current","content","onAction","put"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,MAAnC,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,mCAAD,CAAtB;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA8B;AAC5B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMc,YAAY,GAAGX,WAAW,CAAC,MAAMU,SAAS,CAAED,MAAD,IAAY,CAACA,MAAd,CAAhB,EAAuC,EAAvC,CAAhC;AACF,QAAMG,aAAa,GAAGH,MAAM,GAAG,SAAH,GAAe,QAA3C;AACA,QAAMI,cAAc,GAAGd,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChB,mBAAegB,OAAf,GAAyB;AACnB,YAAMC,OAAO,GAAG;AAACC,QAAAA,MAAM,EAACR;AAAR,OAAhB;AACA,YAAMJ,KAAK,CAACa,IAAN,CAAWZ,MAAM,CAACa,QAAP,GAAkB,yBAA7B,EAAwDH,OAAxD,EAAiEI,IAAjE,CAAsEC,MAAM,IAAI;AACpFA,QAAAA,MAAM,CAACC,IAAP,CAAY,CAAZ,EAAeC,UAAf,IAA4B,CAA5B,GAAgCZ,SAAS,CAAC,IAAD,CAAzC,GAAkDA,SAAS,CAAC,KAAD,CAA3D;AACD,OAFK,CAAN;AAGD;;AACL,aAASa,SAAT,GAAqB;AACf,UAAIV,cAAc,CAACW,OAAf,IAA0BhB,OAA9B,EAAuC;AACrCK,QAAAA,cAAc,CAACW,OAAf,GAAyB,KAAzB;AACAV,QAAAA,OAAO;AACR;AACF;;AACDS,IAAAA,SAAS;AACZ,GAdQ,CAAT;AAeE,SACE,MAAC,IAAD,QACE,MAAC,aAAD;AACL,IAAA,MAAM,EAAE;AACNE,MAAAA,OAAO,EAAEb,aADH;AAEPc,MAAAA,QAAQ,EAAE,YAAY;AACrB,cAAMX,OAAO,GAAG;AAACO,UAAAA,UAAU,EAAC,CAACb;AAAb,SAAhB;AACA,cAAML,KAAK,CAACuB,GAAN,CAAUtB,MAAM,CAACa,QAAP,GAAkB,SAAlB,GAA8BV,OAAxC,EAAiDO,OAAjD,CAAN;AACEL,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;AANO,KADH;AASL,IAAA,OAAO,EAAEA;AATJ,mEADF,CADF;AAiBD;;AAED,eAAeF,SAAf","sourcesContent":["import React, { useState,useEffect,useRef,useCallback} from 'react';\r\nimport { Card, Button,SettingToggle } from '@shopify/polaris';\r\nimport '../css/AppStyle.css';\r\nimport axios from 'axios';\r\nconst config = require('../../server/config/httpConfig.js');\r\n\r\nfunction FirstAuto({valueID}) {\r\n  const [active, setActive] = useState(false);\r\n  const handleToggle = useCallback(() => setActive((active) => !active), []);\r\nconst contentStatus = active ? 'Disable' : 'Enable';\r\nconst isInitialMount = useRef(true);\r\n\r\nuseEffect(() => {\r\nasync function getData() {\r\n      const db_data = {search:valueID};\r\n      await axios.post(config.HTTP_API + '/store/search/firstauto', db_data).then(result => {\r\n        result.data[0].first_auto ==1 ? setActive(true) : setActive(false);\r\n      });\r\n    }\r\nfunction fetchData() {\r\n      if (isInitialMount.current && valueID) {\r\n        isInitialMount.current = false;\r\n        getData();\r\n      }\r\n    }\r\n    fetchData();\r\n});\r\n  return (\r\n    <Card>\r\n      <SettingToggle\r\n\taction={{\r\n\t  content: contentStatus,\r\n\t onAction: async () => {\r\n\t  const db_data = {first_auto:!active};\r\n\t  await axios.put(config.HTTP_API + '/store/' + valueID, db_data);\r\n\t    setActive(!active);\r\n\t}\r\n\t}}\r\n\tenabled={active}\r\n\t>\r\n\tLet first product always be the first product from the cart\r\n\t</SettingToggle>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default FirstAuto;\r\n"]},"metadata":{},"sourceType":"module"}